name: Continuous Deployment (CD)

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Cloud Run Deployment
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          export_environment_variables: true
          create_credentials_file: true
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      - name: Build
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/heymart-monitoring .

      - name: Push
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/heymart-monitoring

      - name: Deploy monitoring service
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'heymart-monitoring'
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/heymart-monitoring
          region: asia-southeast2
          timeout: 15m
          # env_vars: |
          #   PG_HOST=${{ secrets.PG_HOST }}
          #   PG_HOST_DEV=${{ secrets.PG_HOST_DEV }}
          #   PG_HOST_DEV=${{ secrets.PG_HOST_STAGING }}
          #   PG_USERNAME=${{ secrets.PG_USERNAME }}
          #   PG_PASSWORD=${{ secrets.PG_PASSWORD }}
          #   JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          #   JWT_EXPIRE_DURATION=${{ secrets.JWT_EXPIRE_DURATION }}
          #   GATEWAY_TOKEN=${{ secrets.GATEWAY_TOKEN }}
          #   GATEWAY_ORDER_HOST=${{ secrets.GATEWAY_ORDER_HOST }}
          #   GATEWAY_STORE_HOST=${{ secrets.GATEWAY_STORE_HOST }}
          #   GATEWAY_ORDER_HOST_DEV=${{ secrets.GATEWAY_ORDER_HOST_DEV }}
          #   GATEWAY_STORE_HOST_DEV=${{ secrets.GATEWAY_STORE_HOST_DEV }}
          #   GATEWAY_ORDER_HOST_STAGING=${{ secrets.GATEWAY_ORDER_HOST_STAGING }}
          #   GATEWAY_STORE_HOST_STAGING=${{ secrets.GATEWAY_STORE_HOST_STAGING }}
          #   ENVIRONMENT_PROFILE=${{ needs.set-environment.outputs.environment }}